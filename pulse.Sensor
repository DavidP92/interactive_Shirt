int pulsePin = 0;          
int blinkPin = 13;         
int fadePin = 5;           
int fadeRate = 0;  
volatile int BPM;                  
volatile int Signal;                
volatile int IBI = 600;             
volatile boolean Pulse = false; 
volatile boolean QS = false;   volatile int rate[10];                  
volatile unsigned long sampleCounter = 0;   
volatile unsigned long lastBeatTime = 0;      
volatile int P =512;                
volatile int T = 512;               
volatile int thresh = 512;       
volatile int amp = 100;          
volatile boolean firstBeat = true;       
volatile boolean secondBeat = false; 

void interruptSetup(){
        TCCR1A = 0x00;
        TCCR1B = 0x0C; 
        OCR1A = 0x7C; 
        TIMSK1 = 0x02; 
        sei();
    }
ISR(TIMER2_COMPA_vect){ 
  Signal = analogRead(pulsePin); 
  sampleCounter += 2;               
  int N = sampleCounter - lastBeatTime; 
}

void setup(){
  pinMode(13,OUTPUT);  
  pinMode(10,OUTPUT);  
  Serial.begin(115200);  
  interruptSetup();      
//  analogReference(EXTERNAL);  
}  

void loop(){
  sendDataToProcessing('S', Signal);
    if (QS == true){
      sendDataToProcessing('B',BPM);
      sendDataToProcessing('Q',IBI);
      fadeRate = 255;
      QS = false;
     }
    ledFadeToBeat();
     delay(20);
     } 

 

void sendDataToProcessing(char symbol, int data ){
  Serial.print(symbol);    
  Serial.println(data);     
}

void ledFadeToBeat(){
  fadeRate-= 15;                         
  fadeRate= constrain(fadeRate,0,255);
  analogWrite(fadePin, fadeRate);            
}
